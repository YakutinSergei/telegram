from aiogram import Bot, Dispatcher, executor, types
from config import TOKEN_API

bot = Bot(TOKEN_API)
dp = Dispatcher(bot)


HELP_COMMAND = """
<b>/help</b> = <em> –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<b>/give</b> = <em> –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ—Ç–∞</em>
<b>/start</b> = <em> –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ </em>
"""

async def on_startup(_):
    print('—è –∑–∞–ø—É—Å—Ç–∏–ª—Å—è')

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.reply(text=HELP_COMMAND, parse_mode='HTML')



@dp.message_handler(content_types=['sticker'])
async def send_sticker_id(message: types.Message):
    await message.answer(message.sticker.file_id)
#
# @dp.message_handler()
# async def count(message: types.Message):
#     await message.answer(text=str(message.text.count('‚úÖ')))



# @dp.message_handler(commands=['start'])
# async def start_command(message: types.Message):
#     await message.answer('<em>–î–æ–±—Ä–æ <b>–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b> –≤ –Ω–∞—à –¢–µ–ª–µ–≥—Ä–∞–º–º –ë–æ—Ç!</em>', parse_mode='HTML')
#     await message.delete()
#
#
# @dp.message_handler(commands=['give'])
# async def give_command(message: types.Message):
#     await message.answer('–°–º–æ—Ç—Ä–∏ –∫–∞–∫–æ–π —Å–º–µ—à–Ω–æ–π –∫–æ—Çüëç')
#     await bot.send_sticker(message.from_user.id, sticker='CAACAgIAAxkBAAEI9EJkXcklsxD6byp_fhN-xIczloHdGAACdhUAAsD3kEjX6E_o_CmgYy8E')
#     await message.delete()
#
# @dp.message_handler(commands=['description'])
# async def start_command(message: types.Message):
#     await message.answer('<em>–î–æ–±—Ä–æ <b>–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b> –≤ –Ω–∞—à –¢–µ–ª–µ–≥—Ä–∞–º–º –ë–æ—Ç!</em>', parse_mode='HTML')
#     await message.delete()
#
# @dp.message_handler()
# async def send_stiker(message: types.Message):
#     if message.text == '‚ù§Ô∏è':
#         await message.reply('üñ§')
#         await message.delete()




if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup)